@model AstroBlog.Models.ViewModel.AddBlogPostRequest
@{
    ViewData["Title"] = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="inner-banner py-5">
    <div class="w3l-breadcrumb py-lg-5">
        <div class="container pt-5 pb-sm-4 pb-2">
            <h4 class="inner-text-title font-weight-bold pt-5">Blog</h4>
            <ul class="breadcrumbs-custom-path">
                <li><a href="index.html">Home</a></li>
                <li class="active"><i class="fas fa-angle-right mx-2"></i>Add a blogpost</li>
            </ul>
        </div>
    </div>
</section>
<div class="container py-5">
	<form method="post">

		<div class="mb-3">
			<label class="form-label">Heading</label>
			<input type="text" class="form-control" id="heading" asp-for="Heading" />
		</div>
		<div class="mb-3">
			<label class="form-label">Page Title</label>
			<input type="text" class="form-control" id="pageTitle" asp-for="PageTitle" />
		</div>

		<div class="mb-3">
			<label class="form-label">Content</label>
			<textarea class="form-control" id="content" asp-for="Content"></textarea>
		</div>

		<div class="mb-3">
			<label class="form-label">Short Description</label>
			<input type="text" class="form-control" id="shortDescription" asp-for="ShortDescription" />
		</div>

		<div class="mb-3">
			<label class="form-label">Featured Image Upload</label>
			<input type="file" id="featuredImageUpload" class="form-control" />

			<img src="" id="featuredImageDisplay" style="display:none;width: 300px;" />
		</div>

		<div class="mb-3">
			<label class="form-label">Featured Image URL</label>
			<input type="text" class="form-control" id="featuredImageUrl" asp-for="FeaturedImageUrl" />
		</div>

		<div class="mb-3">
			<label class="form-label">URL Handle</label>
			<input type="text" class="form-control" id="urlHandle" asp-for="UrlHandle" />
		</div>

		<div class="mb-3">
			<label class="form-label">Published Date</label>
			<input type="date" class="form-control" id="publishedDate" asp-for="PublishedDate" />
		</div>

		<div class="mb-3">
			<label class="form-label">Author</label>
			<input type="text" class="form-control" id="author" asp-for="Author" />
		</div>

		<div class="form-check mb-3">
			<input class="form-check-input" type="checkbox" id="visible" asp-for="Visible">
			<label class="form-check-label">
				Is Visible?
			</label>
		</div>

		<div class="mb-3">
			<label class="form-label">Tags</label>
			<div class="tag-list">
				@foreach (var tag in Model.Tags)
				{
					<label class="tag" for="@($"tag-{tag.Value}")">@tag.Text</label>
					<input type="checkbox" id="@($"tag-{tag.Value}")" name="SelectedTags" value="@tag.Value" hidden />
				}
			</div>
		</div>





		<div class="mb-3">
			<button type="submit" class="btn btn-dark">
				Save
			</button>
		</div>


	</form>
</div>
<style>
	/* Стилізація текстових міток тегів */
	.tag-list {
		display: flex;
		flex-wrap: wrap;
	}

	.tag {
		display: inline-block;
		padding: 5px 10px;
		margin: 5px;
		background-color: #f0f0f0;
		border: 1px solid #ccc;
		border-radius: 20px;
		cursor: pointer;
	}

		/* Зміна кольору текстової мітки при виборі */
		.tag.selected {
			background-color: #ca0a74; /* Ваш колір */
			color: #fff; /* Колір тексту на вибраній мітці */
		}
</style>


@section Scripts {
	<script>
        var editor = new FroalaEditor('#content', {
            imageUploadURL: '/api/images'
        });


        const featuredUploadElement = document.getElementById('featuredImageUpload');
        const featuredImageUrlElement = document.getElementById('featuredImageUrl');
        const featuredImageDisplayElement = document.getElementById('featuredImageDisplay');


        async function uploadFeaturedImage(e) {
            console.log(e.target.files[0]);

            let data = new FormData();
            data.append('file', e.target.files[0]);

            await fetch('/api/images', {
                method: 'POST',
                headers: {
                    'Accept': '*/*',
                },
                body: data
            }).then(response => response.json())
                .then(result => {
                    featuredImageUrlElement.value = result.link;
                    featuredImageDisplayElement.src = result.link;
                    featuredImageDisplayElement.style.display = 'block';
                });
        }


        featuredUploadElement.addEventListener('change', uploadFeaturedImage);

    </script>
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			// Отримуємо всі мітки
			const tags = document.querySelectorAll('.tag');

			// Додаємо обробник подій для кожної мітки
			tags.forEach(function (tag) {
				tag.addEventListener('click', function () {
					// Перевіряємо, чи вибрано мітку
					if (tag.classList.contains('selected')) {
						// Видаляємо клас 'selected', якщо мітка вже вибрана
						tag.classList.remove('selected');
					} else {
						// Додаємо клас 'selected', якщо мітка не вибрана
						tag.classList.add('selected');
					}
				});
			});
		});
	</script>

}

